1.Ajax+SpringWebMVC

 /json1.do
-->DispatcherServlet
-->HanlderMapping
-->JsonController.test1
-->返回一个String消息
-->调用jackson.jar输出
=======================
2.项目简介(云笔记)
 笔记管理系统:
 1)响应速度快：
    a.页面静态化;
    b.Ajax请求响应;
    c.采用无会话状态处理模式
    （使用Cookie+Db）
    d.采用Tomcat集群部署
 2)处理数据量大：
   数据库采取主从备份,读写分离
   数据表记录过多可以才取分表存储

 3)功能简介
  笔记本模块:创建,删除,列表显示,查看笔记
  笔记模块:创建,删除,更新,笔记列表,
       查看笔记内容,分享笔记,查询笔记
  回收站:删除笔记列表,笔记回复,彻底删除
  分享管理:分享笔记列表,取消分享
  收藏管理:收藏笔记列表,取消收藏
  活动管理:参加活动,取消,查看参加活动的笔记
  用户管理:登录,注册,修改密码,退出
 
 4)涉及技术
  jQuery,Ajax,springmvc,springioc,aop,
  mybatis

  服务器端处理:springmvc,aop,ioc,mybatis
  客户端处理:ajax,jQuery,其他js库

  涉及规则：
  分层: 
   表现层:HTML
   控制层:Controller
   业务层:Service
   数据访问层:Dao

  请求响应模式:
   全部采用采用AJax发送请求,
   服务器返回json结果

  服务器返回JSON格式：
{
  status:状态,
  msg:消息,
  data:数据
}

======登录========
a.先了解需求以及相关数据表结构
  涉及cn_user
b.功能实现
  1)客户端请求发送
   点击登录按钮发送请求
   提交用户名和密码信息

  2)服务器端处理
  /user/login.do
-->DispatcherServlet
-->HandlerMapping
-->UserLoginController.execute
-->UserService.checkLogin
-->UserMapperDao-->cn_user(查询)
-->返回约定的JSON结果

  3)客户端回调处理
  解析JSON结果,根据status值判断成功
还是失败,若成功进入edit.html
如果失败在登录界面显示错误信息

 4)先实现服务器端处理
  a.实现UserMapperDao
    （Spring+MyBatis）
   参考spring+mybatis.png结构图






  



 












